I"D"<h1 id="swea-d4-11446-사탕가게">SWEA D4 11446 사탕가게</h1>

<h2 id="분류--이분탐색">분류 : 이분탐색</h2>
<hr />

<h3 id="문제요약">문제요약</h3>
<p>m개의 사탕으로 구성할때 최대 몇개의 가방을 구성할 수 있는가?, 단 모든 가방의 사탕 구성은 같아야한다.
사탕의 구성만 같다면 m 개 이상의 사탕으로 구성되어도 상관없다. (남으면 버리면 되니까)
1부터 max(가장 많은 수의 사탕) 사이에 숫자를 탐색(가능한 가방 수) 가방 수에서 가능한 사탕의 합 sum이 m이상이면 max에 저장.</p>

<h3 id="주의점">주의점</h3>
<p>범위가 10의 18승 이므로 int 형태는 불가. long 형태
이분 탐색 사용시 시간 복잡도 O(logN/log2)</p>

<h3 id="해결되지-않은-점">해결되지 않은 점</h3>
<p>왜 max까지 탐색을 해야 하는가? min이상일 경우, 1개 이상의 사탕을 넣을 수 없는 경우가 발생하기 때문에 탐색하지 않아도 될것 같은데, 156/200 으로 실패했다. 반례를 찾지 못했다.</p>

<p><a href="https://jwoop.tistory.com/9">이분탐색 설명</a></p>

<p><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AXdHxTNqC2IDFAS5&amp;categoryId=AXdHxTNqC2IDFAS5&amp;categoryType=CODE&amp;problemTitle=&amp;orderBy=FIRST_REG_DATETIME&amp;selectCodeLang=ALL&amp;select-1=&amp;pageSize=10&amp;pageIndex=1">문제링크</a></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span>
<span class="o">{</span>
	<span class="kd">static</span> <span class="kt">long</span><span class="o">[]</span> <span class="n">num</span><span class="o">;</span>
	<span class="kd">static</span> <span class="kt">int</span> <span class="n">n</span><span class="o">;</span>
	<span class="kd">static</span> <span class="kt">long</span> <span class="n">m</span><span class="o">;</span>
	<span class="kd">static</span> <span class="kt">long</span> <span class="n">max</span><span class="o">,</span><span class="n">min</span><span class="o">;</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[])</span> <span class="kd">throws</span> <span class="nc">Exception</span>
	<span class="o">{</span>
		<span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="no">T</span><span class="o">;</span>
		<span class="no">T</span><span class="o">=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">test_case</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">test_case</span> <span class="o">&lt;=</span> <span class="no">T</span><span class="o">;</span> <span class="n">test_case</span><span class="o">++)</span>
		<span class="o">{</span>
            <span class="n">n</span><span class="o">=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
            <span class="n">m</span><span class="o">=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextLong</span><span class="o">();</span>
            <span class="n">num</span><span class="o">=</span><span class="k">new</span> <span class="kt">long</span><span class="o">[</span><span class="n">n</span><span class="o">];</span><span class="c1">//입력형태 주의</span>
            <span class="n">min</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            	<span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextLong</span><span class="o">();</span><span class="c1">//입력형태 주의2</span>
            	<span class="n">min</span><span class="o">=</span><span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">min</span><span class="o">,</span> <span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span><span class="c1">//가장 큰값 저장</span>
            <span class="o">}</span>
            <span class="c1">//Arrays.sort(num);</span>
            <span class="n">max</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
            <span class="n">solv</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="n">min</span><span class="o">);</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"#"</span><span class="o">+</span><span class="n">test_case</span><span class="o">+</span><span class="s">" "</span><span class="o">+</span><span class="n">max</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">solv</span><span class="o">(</span><span class="kt">long</span> <span class="n">k</span><span class="o">,</span> <span class="kt">long</span> <span class="n">l</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">&gt;</span><span class="n">l</span><span class="o">)</span><span class="k">return</span><span class="o">;</span>
		<span class="kt">long</span> <span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="kt">long</span> <span class="n">mid</span><span class="o">=(</span><span class="n">k</span><span class="o">+</span><span class="n">l</span><span class="o">)/</span><span class="mi">2</span><span class="o">;</span><span class="c1">//여기서 중간 값은 가방 수</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span><span class="n">sum</span><span class="o">+=</span><span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">]/</span><span class="n">mid</span><span class="o">;</span><span class="c1">//가방 수 에서 구성되는 사탕의 수</span>
		<span class="k">if</span><span class="o">(</span><span class="n">sum</span><span class="o">&lt;</span><span class="n">m</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">solv</span><span class="o">(</span><span class="n">k</span><span class="o">,</span><span class="n">mid</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
			<span class="k">return</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="n">max</span><span class="o">=</span><span class="n">mid</span><span class="o">;</span><span class="c1">//최대값 갱신</span>
			<span class="n">solv</span><span class="o">(</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span><span class="n">l</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">return</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET